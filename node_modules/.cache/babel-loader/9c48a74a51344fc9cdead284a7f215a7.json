{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tonio\\\\Desktop\\\\frost website clean original in case i break stuff lol\\\\src\\\\components\\\\InvestBox.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState } from \"react\";\nimport BlockchainContext from \"../store/BlockchainContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InvestBox = () => {\n  _s();\n\n  const [avticeStake, setActiveStake] = useState();\n  const [activeUnstake, setActiveUnstake] = useState();\n  const {\n    unstakedNft,\n    stakedNft,\n    invest,\n    unStake,\n    unStakeAll,\n    investAll\n  } = useContext(BlockchainContext);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-box\",\n    children: [\"this box will be split into 2, for mutants and babies, just like the claim box\", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box-row d-flex flex-wrap w-100 justify-content-evenly\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-column align-items-center gap-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"nft-op-btn\",\n          onClick: () => {\n            unStakeAll();\n          },\n          children: \"Unstake all\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"tab-title\",\n          children: \"your staked NFTs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"nft-op-btn\",\n          onClick: () => {\n            avticeStake && unStake(+avticeStake);\n          },\n          children: \"Unstake\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex flex-column align-items-center gap-3 list-holder\",\n          children: stakedNft.map((item, index) => {\n            if (item != 0) {\n              return /*#__PURE__*/_jsxDEV(\"button\", {\n                className: `nft-btn ${avticeStake == +item ? 'active' : ''}`,\n                onClick: () => {\n                  setActiveStake(item);\n                },\n                children: item\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 41\n              }, this);\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-column align-items-center gap-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"nft-op-btn\",\n          onClick: () => {\n            investAll();\n          },\n          children: \"Stake all\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"tab-title\",\n          children: \"your unstaked NFTs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"nft-op-btn\",\n          onClick: () => {\n            activeUnstake && invest(+activeUnstake);\n          },\n          children: \"Stake\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex flex-column align-items-center gap-3 list-holder\",\n          children: unstakedNft.map((item, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `nft-btn ${activeUnstake == +item ? 'active' : ''}`,\n            onClick: () => {\n              setActiveUnstake(item);\n            },\n            children: item\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n\n_s(InvestBox, \"C/s2Hc8Xhv3ALewrzlNs/4ZXezA=\");\n\n_c = InvestBox;\nexport default InvestBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"InvestBox\");","map":{"version":3,"sources":["C:/Users/Tonio/Desktop/frost website clean original in case i break stuff lol/src/components/InvestBox.js"],"names":["useContext","useState","BlockchainContext","InvestBox","avticeStake","setActiveStake","activeUnstake","setActiveUnstake","unstakedNft","stakedNft","invest","unStake","unStakeAll","investAll","map","item","index"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,QAArB,QAAqC,OAArC;AACA,OAAOC,iBAAP,MAA8B,4BAA9B;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,EAA9C;AACA,QAAM,CAACK,aAAD,EAAgBC,gBAAhB,IAAoCN,QAAQ,EAAlD;AACA,QAAM;AACFO,IAAAA,WADE;AAEFC,IAAAA,SAFE;AAGFC,IAAAA,MAHE;AAIFC,IAAAA,OAJE;AAKFC,IAAAA,UALE;AAMFC,IAAAA;AANE,MAOFb,UAAU,CAACE,iBAAD,CAPd;AAQA,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,8GAEI;AAAK,MAAA,SAAS,EAAC,uDAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,6CAAf;AAAA,gCACI;AAAQ,UAAA,SAAS,EAAC,YAAlB;AAA+B,UAAA,OAAO,EAAE,MAAM;AAC3CU,YAAAA,UAAU;AACZ,WAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAG,UAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAQ,UAAA,SAAS,EAAC,YAAlB;AAA+B,UAAA,OAAO,EAAE,MAAM;AAC1CR,YAAAA,WAAW,IAAIO,OAAO,CAAC,CAACP,WAAF,CAAtB;AACH,WAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,eAQI;AAAK,UAAA,SAAS,EAAC,yDAAf;AAAA,oBAEQK,SAAS,CAACK,GAAV,CAAc,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC3B,gBAAID,IAAI,IAAI,CAAZ,EAAe;AACX,kCACI;AAAoB,gBAAA,SAAS,EAAG,WAAUX,WAAW,IAAI,CAACW,IAAhB,GAAuB,QAAvB,GAAkC,EAAG,EAA/E;AAAkF,gBAAA,OAAO,EAAE,MAAM;AAC7FV,kBAAAA,cAAc,CAACU,IAAD,CAAd;AACH,iBAFD;AAAA,0BAEIA;AAFJ,iBAAaC,KAAb;AAAA;AAAA;AAAA;AAAA,sBADJ;AAKH;AACJ,WARD;AAFR;AAAA;AAAA;AAAA;AAAA,gBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAyBI;AAAK,QAAA,SAAS,EAAC,6CAAf;AAAA,gCACI;AAAQ,UAAA,SAAS,EAAC,YAAlB;AAA+B,UAAA,OAAO,EAAE,MAAM;AAC1CH,YAAAA,SAAS;AACZ,WAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAG,UAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAQ,UAAA,SAAS,EAAC,YAAlB;AAA+B,UAAA,OAAO,EAAE,MAAM;AAC1CP,YAAAA,aAAa,IAAII,MAAM,CAAC,CAACJ,aAAF,CAAvB;AACH,WAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,eAQI;AAAK,UAAA,SAAS,EAAC,yDAAf;AAAA,oBAEQE,WAAW,CAACM,GAAZ,CAAgB,CAACC,IAAD,EAAOC,KAAP,kBACZ;AAAoB,YAAA,SAAS,EAAG,WAAUV,aAAa,IAAI,CAACS,IAAlB,GAAyB,QAAzB,GAAoC,EAAG,EAAjF;AAAoF,YAAA,OAAO,EAAE,MAAM;AAC/FR,cAAAA,gBAAgB,CAACQ,IAAD,CAAhB;AACH,aAFD;AAAA,sBAEIA;AAFJ,aAAaC,KAAb;AAAA;AAAA;AAAA;AAAA,kBADJ;AAFR;AAAA;AAAA;AAAA;AAAA,gBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAzBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkDH,CA7DD;;GAAMb,S;;KAAAA,S;AA+DN,eAAeA,SAAf","sourcesContent":["import { useContext, useState } from \"react\";\r\nimport BlockchainContext from \"../store/BlockchainContext\";\r\n\r\nconst InvestBox = () => {\r\n    const [avticeStake, setActiveStake] = useState()\r\n    const [activeUnstake, setActiveUnstake] = useState()\r\n    const {\r\n        unstakedNft,\r\n        stakedNft,\r\n        invest,\r\n        unStake,\r\n        unStakeAll,\r\n        investAll\r\n    } = useContext(BlockchainContext);\r\n    return (\r\n        <div className='main-box'>\r\n            this box will be split into 2, for mutants and babies, just like the claim box \r\n            <div className='box-row d-flex flex-wrap w-100 justify-content-evenly'>\r\n                <div className='d-flex flex-column align-items-center gap-3'>\r\n                    <button className='nft-op-btn' onClick={() => {\r\n                       unStakeAll()\r\n                    }}>Unstake all</button>\r\n                    <p className='tab-title'>your staked NFTs</p>\r\n                    <button className='nft-op-btn' onClick={() => {\r\n                        avticeStake && unStake(+avticeStake)\r\n                    }}>Unstake</button>\r\n                    <div className='d-flex flex-column align-items-center gap-3 list-holder'>\r\n                        {\r\n                            stakedNft.map((item, index) => {\r\n                                if (item != 0) {\r\n                                    return (\r\n                                        <button key={index} className={`nft-btn ${avticeStake == +item ? 'active' : ''}`} onClick={() => {\r\n                                            setActiveStake(item)\r\n                                        }}>{item}</button>\r\n                                    )\r\n                                }\r\n                            })\r\n                        }\r\n                    </div>\r\n\r\n\r\n                </div>\r\n                <div className='d-flex flex-column align-items-center gap-3'>\r\n                    <button className='nft-op-btn' onClick={() => {\r\n                        investAll()\r\n                    }}>Stake all</button>\r\n                    <p className='tab-title'>your unstaked NFTs</p>\r\n                    <button className='nft-op-btn' onClick={() => {\r\n                        activeUnstake && invest(+activeUnstake)\r\n                    }}>Stake</button>\r\n                    <div className='d-flex flex-column align-items-center gap-3 list-holder'>\r\n                        {\r\n                            unstakedNft.map((item, index) => (\r\n                                <button key={index} className={`nft-btn ${activeUnstake == +item ? 'active' : ''}`} onClick={() => {\r\n                                    setActiveUnstake(item)\r\n                                }}>{item}</button>\r\n                            ))\r\n                        }\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InvestBox"]},"metadata":{},"sourceType":"module"}